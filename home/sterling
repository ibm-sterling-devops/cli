#!/bin/bash

# Usage: sterling install

function trap_exit {
  save_config
}

function trap_int {
  # Reset any modifications made to the terminal
  tset

  echo
  echo
  save_config
  exit 0
}

trap trap_exit EXIT
trap trap_int INT


CLI_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
CONFIG_DIR="$HOME/.ibm-sterling-devops/config"
LOG_DIR="$HOME/.ibm-sterling-devops/logs"
LOGFILE=$LOG_DIR/sterling.log

# Note: "latest" is overwritten with the actual version at build time
VERSION=latest

mkdir -p $LOG_DIR
mkdir -p $CONFIG_DIR

export PS1="[\[\e[0;32m\]ibm-sterling-devops/cli:$VERSION\[\e[0m\]]\[\e[0;36m\]\W\[\e[0m\]\$ "
COLOR_RED=`tput setaf 1`
COLOR_GREEN=`tput setaf 2`
COLOR_YELLOW=`tput setaf 3`
COLOR_BLUE=`tput setaf 4`
COLOR_MAGENTA=`tput setaf 5`
COLOR_CYAN=`tput setaf 6`
COLOR_RESET=`tput sgr0`

TEXT_BOLD=$(tput bold)
TEXT_DIM=$(tput dim)
TEXT_UNDERLINE=$(tput smul)
TEXT_RESET=$(tput sgr0)

# General purpose internals
#. $CLI_DIR/functions/internal/pipelines_install_operator
#. $CLI_DIR/functions/internal/pipelines_install_tasks
#. $CLI_DIR/functions/internal/catalog_utils
#. $CLI_DIR/functions/internal/connect
#. $CLI_DIR/functions/internal/utils
#. $CLI_DIR/functions/internal/save_config
## Sterling provisioning support
#. $CLI_DIR/functions/provision_ocp
#. $CLI_DIR/functions/provision_fyre
#. $CLI_DIR/functions/provision_roks
#. $CLI_DIR/functions/provision_aws
## Sterling installation support
#. $CLI_DIR/functions/install-b2bi
#. $CLI_DIR/functions/update-b2bi
## Airgap support
#. $CLI_DIR/functions/setup_registry
#. $CLI_DIR/functions/teardown_registry
#. $CLI_DIR/functions/mirror_images
#. $CLI_DIR/functions/mirror_redhat_images
#. $CLI_DIR/functions/configure_mirror
## Manage OIDC for configtool
#. $CLI_DIR/functions/configtool_oidc
## Must Gather
#. $CLI_DIR/functions/must_gather

function sterling_help() {
  echo "${TEXT_UNDERLINE}IBM Sterling - Devops - CLI Container ${TEXT_BOLD}v${VERSION}${TEXT_RESET}"
  echo
  echo "${COLOR_CYAN}${TEXT_UNDERLINE}https://github.com/ibm-sterling-devops/ansible-ibm-sterling${TEXT_RESET}"
  echo "${COLOR_CYAN}${TEXT_UNDERLINE}https://github.com/ibm-sterling-devops/cli${TEXT_RESET}"
  echo
  echo "IBM Sterling - Default:"
  echo "  - ${TEXT_BOLD}${COLOR_GREEN}sterling install-b2bi${TEXT_RESET} to install a new sterling instance"
  echo "  - ${TEXT_BOLD}${COLOR_GREEN}sterling update-b2bi${TEXT_RESET} to apply a new catalog update"
  echo
  echo "IBM Sterling - Container Edition:"
  echo "  - ${TEXT_BOLD}${COLOR_GREEN}sterling provision-ocp${TEXT_RESET} to install a new Sterling B2Bi instance - DEV"
  #echo "Disconnected Install Support:"
  #echo "  - ${TEXT_BOLD}${COLOR_GREEN}sterling setup-registry${TEXT_RESET} to setup a private container registry on an OCP cluster"
  #echo "  - ${TEXT_BOLD}${COLOR_GREEN}sterling teardown-registry${TEXT_RESET} to delete a private container registry on an OCP cluster"
  #echo "  - ${TEXT_BOLD}${COLOR_GREEN}sterling mirror-images${TEXT_RESET} to mirror container images required by sterling to a private registry"
  #echo "  - ${TEXT_BOLD}${COLOR_GREEN}sterling configure-mirror${TEXT_RESET} to configure a cluster to use a private registry as a mirror"
  echo
  echo "Cluster Management:"
  echo "  - ${TEXT_BOLD}${COLOR_GREEN}sterling provision-fyre${TEXT_RESET} to provision an OCP cluster on IBM DevIT Fyre (internal)"
  echo "  - ${TEXT_BOLD}${COLOR_GREEN}sterling provision-roks${TEXT_RESET} to provision an OCP cluster on IBM Cloud Red Hat OpenShift Service (ROKS)"
  echo "  - ${TEXT_BOLD}${COLOR_GREEN}sterling provision-aws${TEXT_RESET} to provision an OCP cluster on AWS"
  echo "  - ${TEXT_BOLD}${COLOR_GREEN}sterling provision-rosa${TEXT_RESET} to provision an OCP cluster on AWS Red Hat OpenShift Service (ROSA)"
  echo
}

case $1 in
  fyre|provision-fyre)
    echo "${TEXT_UNDERLINE}IBM Sterling - Container FYRE Cluster Provisioner (v${VERSION})${TEXT_RESET}"
    echo "Powered by ${COLOR_CYAN}${TEXT_UNDERLINE}https://github.com/ibm-sterling-devops/ansible-ibm-sterling/${TEXT_RESET}"
    echo
    reset_colors
    update_ansible_collections
    provision_fyre "$@"
    ;;

  roks|provision-roks)
    echo "${TEXT_UNDERLINE}IBM Sterling - Container ROKS Cluster Provisioner (v${VERSION})${TEXT_RESET}"
    echo "Powered by ${COLOR_CYAN}${TEXT_UNDERLINE}https://github.com/ibm-sterling-devops/ansible-ibm-sterling/${TEXT_RESET}"
    echo
    reset_colors
    update_ansible_collections
    provision_roks "$@"
    ;;

  aws|provision-aws)
    echo "${TEXT_UNDERLINE}IBM Sterling - Container AWS Cluster Provisioner (v${VERSION})${TEXT_RESET}"
    echo "Powered by ${COLOR_CYAN}${TEXT_UNDERLINE}https://github.com/ibm-sterling-devops/ansible-ibm-sterling/${TEXT_RESET}"
    echo
    reset_colors
    update_ansible_collections
    provision_aws "$@"
    ;;

  oidc|configtool-oidc)
    echo "${TEXT_UNDERLINE}IBM Sterling - Container OIDC for Configuration Tool (v${VERSION})${TEXT_RESET}"
    echo
    reset_colors
    configtool_oidc "$@"
    ;;

  registry|setup-registry|setup-mirror-registry|setup-airgap-registry)
    echo "${TEXT_UNDERLINE}IBM Sterling - Container Air Gap Registry Setup (v${VERSION})${TEXT_RESET}"
    echo "Powered by ${COLOR_CYAN}${TEXT_UNDERLINE}https://github.com/ibm-sterling-devops/ansible-ibm-sterling/${TEXT_RESET}"
    echo
    reset_colors
    update_ansible_collections
    connect
    setup_mirror_registry
    ;;

  delete-registry|teardown-registry|teardown-mirror-registry|teardown-airgap-registry)
    echo "${TEXT_UNDERLINE}IBM Sterling - Container Air Gap Registry Tear Down (v${VERSION})${TEXT_RESET}"
    echo "Powered by ${COLOR_CYAN}${TEXT_UNDERLINE}https://github.com/ibm-sterling-devops/ansible-ibm-sterling/${TEXT_RESET}"
    echo
    reset_colors
    update_ansible_collections
    connect
    teardown_mirror_registry
    ;;


  install-b2bi)
    install "$@"
    ;;

  update-b2bi)
    echo "${TEXT_UNDERLINE}IBM Sterling - Container Update Manager (v${VERSION})${TEXT_RESET}"
    echo "Powered by ${COLOR_CYAN}${TEXT_UNDERLINE}https://github.com/ibm-sterling-devops/ansible-ibm-sterling/${TEXT_RESET} and ${COLOR_CYAN}${TEXT_UNDERLINE}https://tekton.dev/${TEXT_RESET}"
    echo
    reset_colors
    update "$@"
    ;;

  upgrade)
    echo "${TEXT_UNDERLINE}IBM Sterling - Container Upgrade Manager (v${VERSION})${TEXT_RESET}"
    echo "Powered by ${COLOR_CYAN}${TEXT_UNDERLINE}https://github.com/ibm-sterling-devops/ansible-ibm-sterling/${TEXT_RESET} and ${COLOR_CYAN}${TEXT_UNDERLINE}https://tekton.dev/${TEXT_RESET}"
    echo
    reset_colors
    upgrade "$@"
    ;;

  uninstall)
    echo "${TEXT_UNDERLINE}IBM Sterling - Container Uninstall Manager (v${VERSION})${TEXT_RESET}"
    echo "Powered by ${COLOR_CYAN}${TEXT_UNDERLINE}https://github.com/ibm-sterling-devops/ansible-ibm-sterling/${TEXT_RESET} and ${COLOR_CYAN}${TEXT_UNDERLINE}https://tekton.dev/${TEXT_RESET}"
    echo
    reset_colors
    uninstall "$@"
    ;;

  mustgather|must-gather)
    echo "${TEXT_UNDERLINE}IBM Sterling - Container Must-Gather Tool (v${VERSION})${TEXT_RESET}"
    echo
    mustgather "$@"
    ;;

  help)
    sterling_help
    exit 1
    ;;

  *)
    echo -e "${COLOR_RED}Usage Error: Unsupported option \"${key}\"${COLOR_RESET}\n"
    sterling_help
    exit 1
    ;;
esac
